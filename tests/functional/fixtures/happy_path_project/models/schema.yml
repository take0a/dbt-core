version: 2
models:
  - name: outer
    description: The outer table
    columns:
      - name: id
        description: The id value
        data_tests:
          - unique
          - not_null
  - name: metricflow_time_spine
    description: Day time spine
    time_spine:
      standard_granularity_column: date_day
    columns:
      - name: date_day
        granularity: day
    config:
      tags:
        - "list"
        - "of"
        - "tags"
      pre_hook:
        - "SELECT 'string_pre_hook' as my_pre_hook;"
      post_hook:
        - "SELECT 'string_post_hook' as my_post_hook;"
      group: "finance"
  - name: metricflow_time_spine_second
    description: Second time spine
    config:
      event_time: ts_second
    columns:
      - name: ts_second
        granularity: second
  - name: model_with_lots_of_schema_configs
    columns:
      - name: id
        description: The id value
        data_tests:
          - unique
          - not_null:
              name: "my_favorite_test"
              description: "A test that should pass"
              config:
                alias: "not_null__id__alias"
                database: "dbt"
                group: "important_tests"
                enabled: true
                error_if: "!= 0"
                fail_calc: "count(*)"
                limit: 10
                meta:
                  my_custom_meta_key: "my_custom_meta_value"
                schema: "dbt_test__audit"
                severity: "warn"
                store_failures: true
                store_failures_as: "table"
                tags:
                  - "test_tag"
                warn_if: "!= 0"
                where: "1 = 1"
      - name: created_at
        description: The date the row was created
        data_tests:
          - my_generic_test:
              name: "my_second_favorite_test"
              description: "A test that should pass"
              config:
                alias: "my_generic_test__created_at__alias"
                database: "dbt"
                group: "important_tests"
                enabled: true
                error_if: "!= 0"
                fail_calc: "count(*)"
                limit: 10
                meta:
                  my_custom_meta_key: "my_custom_meta_value"
                schema: "dbt_test__audit"
                severity: "warn"
                store_failures: true
                store_failures_as: "table"
                tags:
                  - "test_tag"
                warn_if: "!= 0"
                where: "1 = 1"

    config:
      access: public
      alias: "outer_alias"
      batch_size: day
      begin: "2020-01-01"
      concurrent_batches: false
      contract:
        alias_types: true
        enforce: true
      docs:
        node_color: purple
        show: true
      database: "dbt"
      enabled: true
      full_refresh: false
      grants:
        select: ["root"]
      lookback: 5
      materialized: table
      meta:
        my_custom_property: "string_meta"
      on_configuration_change: apply
      persist_docs:
        columns: true
        relation: true
      post_hook: "SELECT 'string_post_hook' as my_post_hook;"
      pre_hook: "SELECT 'string_pre_hook' as my_pre_hook;"
      schema: "test"
      sql_header: "SELECT 1 as header;"
      tags: "string_tag"
      unique_key: id
    constraints:
      - type: primary_key
        columns: ["id"]
        warn_unsupported: false
      - type: foreign_key
        columns: ["id"]
        to: source('my_source', 'my_table')
        to_columns: ["id"]
      - type: check
        columns: ["id"]
        expression: "id > 0"
        name: "Check that id is greater than 0"
    deprecation_date: "2052-05-01"
    description: A model with lots of configs

sources:
  - name: my_source
    description: description
    database: raw
    schema: jaffle_shop
    loader: test
    loaded_at_field: column_name
    config:
      enabled: true
      event_time: column_name
      meta:
        test: 1
      freshness:
        warn_after:
          count: 1
          period: minute
        error_after:
          count: 2
          period: hour
        filter: "column_name = 1"

    # # overrides: test

    quoting:
      database: true
      schema: true
      identifier: true

    tables:
      - name: my_table
        description: description
        identifier: table_identifier
        loaded_at_field: column_name
        tests: []
        quoting:
          database: true
          schema: true
          identifier: true
        external:
          location: location
          file_format: file_format
          row_format: row_format
          tbl_properties: tbl_properties
          partitions:
            - name: column_name
              data_type: data_type
              description: description
              meta:
                test: 1
          additional_property: additional_value
        columns:
          - name: column_name
            description: description
            quote: true
            tests: []
            config:
              meta:
                test: 1
                tags: ["tags"]
        config:
          enabled: true
          event_time: column_name
          meta:
            test: 1
          tags: ["tag"]
          freshness:
            warn_after:
              count: 1
              period: minute
            error_after:
              count: 2
              period: hour
            filter: "column_name = 1"
